= bit_hash

A simple class that allows you to store data in a bit mask. It automagically manages bit sizes and base conversion of binary bitmask.

== Usage

When writing these config maps. Try to put the mose used options first so the string can be shorter.

  require 'rubygems'
  require 'bit_hash'
  class SearchParams < BitHash

    # first set base
    # Integer up to 36
    # radix to be used in the future but not right now.
    set_base 36

    field :air, :values => 2,    # number of options must be 2 or greater
    field :color, :values => ['blue','green','red']  # bit_hash can map arrays of data, the default setting will be the first value in the array
    field :body_style,  :values => [:sedan,:mini_van,:suv]  # Array values can be anything that can be found using the Array#index function
    field :transmission,:values => 6,
    field :min_price, :values => (50..100).to_a # ( just a way to store ranges of numbers)
    field :max_price, :values => (1..5).to_a.map {|n| 10000+(n*20)},

    # overwrite default accessors

    def body_style=(value)
      self.write_attribute(:body_style,value).to_sym
    end

    def body_style
      self.read_attribute(:body_style).to_s
    end

  end

  # initialize
  @search = SearchParams.new

  # set a single value
  @search[:color]='red'
  @search.color = 'red'

  # get a value
  @search[:value]

  # get a value


  # replace values in config with another hash
  @search.replace({:air=>1})

  # convert to small compact string
  @search.to_s
  @search.dump

  # load
  SearchParams.load(@search.dump)


== TODO

* Impliment more tests
* Storage of strings?
* If binary options and default 1, user inverse
* create javascript version for easy communication between ruby and javascript

== Contributing to bit_hash

* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Credits

Ryan Ong - ryanong@gmail.com

Developed for and with CarZen[link:http://carzen.com]

== Copyright

Copyright (c) 2011 Ryan Ong. See LICENSE.txt for
further details.

